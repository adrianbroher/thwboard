<?xml version="1.0"?>
<!--

ThWboard - PHP/MySQL Bulletin Board System
==========================================

Copyright (C) 2000-2004 by ThWboard Development Group

This file is part of ThWboard

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program;  If not, see <http://www.gnu.org/licenses/>.

-->
<project name="ThWboard" default="test"
    description="The ThWboard is a free bulletin board system.">

    <taskdef name="webserver" classname="phing.tasks.ext.ServerTask" />

    <fileset dir="." id="auxillary-sources">
        <include name="tests/**/*.php" />
    </fileset>

    <fileset dir="." id="sources">
        <include name="**/*.php" />
        <include name="admin/updates/*.update" />
        <include name="templates/default/*.html" />
        <include name="templates/mail/*.mail" />
        <exclude name="admin/images/" />
        <exclude name="avatar/" />
        <exclude name="bin/" />
        <exclude name="extras/" />
        <exclude name="vendor/" />
    </fileset>

    <target name="functional-test">
        <if>
            <not>
                <available file="build.properties" />
            </not>
            <then>
                <fail message="No build.properties found. Please set up environment with `bin/phing init`." />
            </then>
        </if>

        <property file="build.properties" />

        <!-- Write a local YAML configuration file for behat -->
        <echo file="behat.yml"><![CDATA[
# This file was created by `bin/phing functional-test`. Please run
# `bin/phing init` to change this configuration.
default:
    autoload:
        - tests/behat-bootstrap/
    suites:
        default:
            paths: [ tests/functional ]
            contexts:
                - CommonActionsContext:
                    substitutions:
                        DATABASE_HOSTNAME: ${database_hostname}
                        DATABASE_USERNAME: ${database_username}
                        DATABASE_PASSWORD: ${database_password}
                        DATABASE_NAME: ${database_name}
                - HTMLDumpContext:
                    context_name: CommonActionsContext
                    html_dump_path: /tmp/thwboard
                - ThWboardModelFeatureContext
    formatters:
        progress:
    extensions:
        Behat\MinkExtension:
            base_url: http://127.0.0.1:8080
            goutte: ~
        ]]></echo>

        <webserver>
            <if>
                <not><isset property="test.functional.feature" /></not>
                <then>
                    <exec executable="bin/behat" passthru="true" checkreturn="true" />
                </then>
                <else>
                    <exec executable="bin/behat" passthru="true" checkreturn="true">
                        <arg value="${test.functional.feature}" />
                    </exec>
                </else>
            </if>
        </webserver>
    </target>

    <target name="init" description="Setting up the test environment">
        <echo><![CDATA[
Setting up the test environment.

The test environment requires a MySQL database.

To set up the database you need the credentials of a MySQL user that can
CREATE DATABASEs, CREATE USERs and GRANT permissions.  The MySQL database
root user for example has the required capabilities.
        ]]></echo>

        <input
            propertyName="database.hostname"
            defaultValue="localhost"
            promptChar=":"><![CDATA[Test database host name]]></input>
        <input
            propertyName="database.username"
            defaultValue="root"
            promptChar=":"><![CDATA[Test database user name]]></input>
        <input
            propertyName="database.password"
            promptChar=":"><![CDATA[Test database password (will be echoed)]]></input>
        <input
            propertyName="database.testprefix"
            defaultValue="thwb"
            promptChar=":"><![CDATA[Test database and user prefix]]></input>

        <echo><![CDATA[
This WILL DROP the database `${database.testprefix}test`@`${database.hostname}`.
This WILL DROP the user `${database.testprefix}test`@`${database.hostname}`.
        ]]></echo>

        <input
            propertyName="confirm-continue"
            validArgs="yes,no"><![CDATA[Do you REALLY want to continue? ]]></input>

        <if>
            <equals arg1="${confirm-continue}" arg2="no" />
            <then>
                <fail message="Aborted test environment setup." />
            </then>
        </if>

        <pdo
            url="mysql:host=${database.hostname};"
            userid="${database.username}"
            password="${database.password}"><![CDATA[
-- Drop the test database.
DROP DATABASE IF EXISTS `${database.testprefix}test`;
-- Because there is no conditional user dropping just grant the usage
-- of the database to guarrantee that there is a user.
GRANT USAGE ON *.* TO '${database.testprefix}test'@'${database.hostname}';
-- Drop the test runner user.
DROP USER '${database.testprefix}test'@'${database.hostname}';
-- Create the test database.
CREATE DATABASE `${database.testprefix}test`;
-- Create the test runner user.
CREATE USER '${database.testprefix}test'@'${database.hostname}' IDENTIFIED BY '${database.testprefix}test';
-- Grant the test runner user to connect to the database.
GRANT USAGE ON *.* TO '${database.testprefix}test'@'${database.hostname}';
-- Grant the test runner user to access and manipulate the test database.
GRANT ALL PRIVILEGES ON `${database.testprefix}test`.* TO '${database.testprefix}test'@'${database.hostname}';
-- Apply permissions.
FLUSH PRIVILEGES;
        ]]></pdo>

        <!-- Write a property file for some additional behat configuration -->
        <echo file="build.properties"><![CDATA[
# This file was created by `bin/phing init`. Please rerun the command to
# change this configuration.

# The database hostname hosting the test database
database_hostname=${database.hostname}
# The test runner user name to access the test database
database_username=${database.testprefix}test
# The test runner user password to access the test database
database_password=${database.testprefix}test
# The test database name
database_name=${database.testprefix}test
# The table prefix used in the test database
table_prefix=tb_
        ]]></echo>
    </target>

    <target name="lint" description="Runs the builtin PHP linter">
        <phplint haltonfailure="true">
            <fileset refid="auxillary-sources" />
            <fileset refid="sources" />
        </phplint>
    </target>

    <target name="test" depends="lint,functional-test"
        description="Runs all implemented test suites"/>
</project>
