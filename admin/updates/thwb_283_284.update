<?php

class CUpdate
{
    var        $UpdaterVer        = 1.0;
    var        $OldVersion        = '2.83';
    var        $NewVersion        = '2.84';
    var        $Prefix            = '';
    var        $Author            = 'ThWboard Development Team';
    var        $Date            = '';
    var        $Notes            = '';
    private $pdo = null;

    function writestyle($id)
      {
        $pref = $this->Prefix;

        $stmt = $this->pdo->prepare(
<<<SQL
SELECT
    colorbg,
    colorbgfont,
    color4,
    col_he_fo_font,
    color1,
    CellA,
    CellB,
    border_col,
    color_err,
    col_link,
    col_link_v,
    col_link_hover,
    stdfont
FROM
    {$pref}style
WHERE
    styleid = :id
SQL
        );

        $stmt->bindValue(':id', $id, PDO::PARAM_INT);
        $stmt->execute();

        $style = $style->fetch();

        $str = "a:link { color: $style[col_link]; text-decoration: none; }\n".
          "a:visited { color: $style[col_link_v]; text-decoration: none; }\n".
          "a:hover { color: $style[col_link_hover]; text-decoration: none; }\n".
          "a:active { color: $style[col_link]; text-decoration: none; }\n".
          "a.bglink:link { color: $style[colorbgfont]; text-decoration: underline; }\n".
          "a.bglink:visited { color: $style[colorbgfont]; text-decoration: underline; }\n".
          "a.bglink:hover { color: $style[colorbgfont]; text-decoration: none; }\n".
          "a.bglink:active { color: $style[colorbgfont]; text-decoration: underline; }\n".
          "a.hefo:link { color: $style[col_he_fo_font]; text-decoration: underline; }\n".
          "a.hefo:visited { color: $style[col_he_fo_font]; text-decoration: underline; }\n".
          "a.hefo:hover { color: $style[col_he_fo_font]; text-decoration: none; }\n".
          "a.hefo:active { color: $style[col_he_fo_font]; text-decoration: underline; }\n".
          "body { background-color: $style[colorbg]; color: $style[color1]; }\n".
          ".border-col { background-color: $style[border_col]; }\n".
          ".cella { background-color: $style[CellA]; }\n".
          ".cellb { background-color: $style[CellB]; }\n".
          ".color4 { background-color: $style[color4]; }\n".
          ".tbbutton { font-family: Verdana; font-size: 8pt; }\n".
          ".tbinput { background-color: #EEEEEE; font-family: Verdana; font-size: 8pt; }\n".
          ".tbselect { background-color: #EEEEEE; font-family: Verdana; font-size: 8pt; }\n".
          ".tbtextarea { background-color: #EEEEEE; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt; }\n".
          ".smallfont { font-family: $style[font]; font-size:10px; }\n".
          ".stdfont { font-family:$style[font]; font-size:12px; }\n".
          ".header { color: $style[col_he_fo_font]; font-size: 12pt; }";

        $f = fopen("../templates/css/$id.css", "w");

        fwrite($f, $str);

        fclose($f);
      }

    function updateboard($boardid)
      {
        $pref = $this->Prefix;

        $thread_stmt = $this->pdo->prepare(
<<<SQL
SELECT
    threadid,
    threadtopic,
    threadtime,
    threadlastreplyby,
    COUNT(threadid) AS threadcount,
    SUM(threadreplies) + COUNT(threadid) AS postcount
FROM
    {$pref}thread
WHERE
    threadlink = 0 AND
    boardid = :boardid
GROUP BY
    threadid
ORDER BY
    threadtime DESC
LIMIT
    1
SQL
        );

        $thread_stmt->bindValue(':boardid', $boardid, PDO::PARAM_INT);
        $thread_stmt->execute();

        $board_stmt = $this->pdo->prepare(
<<<SQL
UPDATE
    {$pref}board
SET
    boardlastpost = :lastpost,
    boardthreadid = :threadid,
    boardthreadtopic = :threadtopic,
    boardlastpostby = :lastpostby,
    boardposts = :postcount,
    boardthreads = :threadcount
WHERE
    boardid = :boardid
SQL
        );

        $board_stmt->bindValue(':boardid', $boardid, PDO::PARAM_INT);

        if ($thread_stmt->rowCount()) {
            $board_stmt->bindValue(':lastpost', 0, PDO::PARAM_INT);
            $board_stmt->bindValue(':threadid', 0, PDO::PARAM_INT);
            $board_stmt->bindValue(':threadtopic', "", PDO::PARAM_STR);
            $board_stmt->bindValue(':lastpostby', "", PDO::PARAM_STR);
            $board_stmt->bindValue(':postcount', 0, PDO::PARAM_INT);
            $board_stmt->bindValue(':threadcount', 0, PDO::PARAM_INT);
        } else {
            $thread = $thread_stmt->fetch();

            $board_stmt->bindValue(':lastpost', $thread['threadtime'], PDO::PARAM_INT);
            $board_stmt->bindValue(':threadid', $thread['threadid'], PDO::PARAM_INT);
            $board_stmt->bindValue(':threadtopic', $thread['threadtopic'], PDO::PARAM_STR);
            $board_stmt->bindValue(':lastpostby', $thread['threadlastreplyby'], PDO::PARAM_STR);
            $board_stmt->bindValue(':postcount', $thread['postcount'], PDO::PARAM_INT);
            $board_stmt->bindValue(':threadcount', $thread['threadcount'], PDO::PARAM_INT);
        }

        $board_stmt->execute();
      }

    public function __construct(PDO $pdo)
    {
        $this->pdo = $pdo;
        // this is a little hack so that we always get the correct date.

        $this->Date = preg_replace('/^\$'.'Date: ([0-9]{4})\/([0-9]{2})\/([0-9]{2}) [0-9]{2}:[0-9]{2}:[0-9]{2} \$$/', '\3.\2.\1', '$Date: 2004-11-07 01:19:15 +0100 (Sun, 07 Nov 2004) $');
    }

    function AllowUpdate()
    {
        $stmt = $this->pdo->query(
<<<SQL
SELECT
    keyvalue
FROM
    {$this->Prefix}registry
WHERE
    keyname = 'version'
SQL
        );

        $version = $stmt->fetch(PDO::FETCH_COLUMN, 0);

        return ($version == $this->OldVersion);
    }

    function RunUpdate()
    {
        $pref = $this->Prefix;

            /* no update if templates/css/ does not exist */

            if(!is_writable("../templates/css/") || !is_writable("../templates/css/1.css"))
          {
            throw new RuntimeException("You must set templates/css/ and any css files inside to be writable by php scripts. Often this means setting permissions to 777.");
          }

        $this->pdo->exec(
<<<SQL
ALTER TABLE
    {$pref}user
DROP COLUMN
    usernoipcheck
SQL
        );

        $this->pdo->exec(
<<<SQL
UPDATE
    {$pref}registry
SET
    keydescription = 'Used in eMails &amp; some board features<br>It is vital to set this correctly! '
WHERE
    keyname = 'board_baseurl'
SQL
        );

        $styles = $this->pdo->query(
<<<SQL
SELECT
    styleid
FROM
    {$pref}style
WHERE
    styleid != 1
SQL
        )->fetchAll(PDO::FETCH_COLUMN, 0);

        foreach ($styles as $styleid) {
            $this->writestyle($v);
        }

        $boards = $this->pdo->query(
<<<SQL
SELECT
    boardid
FROM
    {$pref}board
SQL
        )->fetchAll(PDO::FETCH_COLUMN, 0);

        foreach ($boards as $boardid) {
            $this->updateboard($boardid);
        }

        $stmt = $this->pdo->prepare(
<<<SQL
UPDATE
    {$pref}registry
SET
    keyvalue = :version
WHERE
    keyname = 'version'
SQL
        );

        $stmt->bindValue(':version', $this->NewVersion, PDO::PARAM_STR);
        $stmt->execute();

        return 0;
    }
}
